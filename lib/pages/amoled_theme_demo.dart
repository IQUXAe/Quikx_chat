import 'package:flutter/material.dart';
import '../config/amoled_theme.dart';

/// –î–µ–º–æ AMOLED —Ç–µ–º—ã
class AmoledThemeDemo extends StatefulWidget {
  const AmoledThemeDemo({super.key});

  @override
  State<AmoledThemeDemo> createState() => _AmoledThemeDemoState();
}

class _AmoledThemeDemoState extends State<AmoledThemeDemo> {
  ExtendedThemeMode _currentTheme = ExtendedThemeMode.amoled;
  bool _useAmoled = true;

  @override
  Widget build(BuildContext context) {
    return Theme(
      data: _useAmoled 
          ? AmoledTheme.buildAmoledTheme(context)
          : ThemeData.dark(),
      child: Scaffold(
        appBar: AppBar(
          title: const Text('AMOLED –¢–µ–º–∞'),
          actions: [
            IconButton(
              onPressed: () {
                setState(() {
                  _useAmoled = !_useAmoled;
                });
              },
              icon: Icon(_useAmoled ? Icons.brightness_1 : Icons.brightness_6),
              tooltip: _useAmoled ? '–û–±—ã—á–Ω–∞—è —Ç—ë–º–Ω–∞—è —Ç–µ–º–∞' : 'AMOLED —Ç–µ–º–∞',
            ),
          ],
        ),
        body: ListView(
          padding: const EdgeInsets.all(16),
          children: [
            // –ó–∞–≥–æ–ª–æ–≤–æ–∫
            Card(
              child: Padding(
                padding: const EdgeInsets.all(20),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Row(
                      children: [
                        Icon(
                          Icons.phone_android,
                          size: 32,
                          color: Theme.of(context).colorScheme.primary,
                        ),
                        const SizedBox(width: 12),
                        Expanded(
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Text(
                                'AMOLED —Ç–µ–º–∞',
                                style: Theme.of(context).textTheme.headlineSmall,
                              ),
                              Text(
                                '–≠–∫–æ–Ω–æ–º–∏—è –±–∞—Ç–∞—Ä–µ–∏ –Ω–∞ OLED —ç–∫—Ä–∞–Ω–∞—Ö',
                                style: Theme.of(context).textTheme.bodyMedium,
                              ),
                            ],
                          ),
                        ),
                      ],
                    ),
                    const SizedBox(height: 16),
                    Text(
                      '–ì–ª—É–±–æ–∫–∏–π —á–µ—Ä–Ω—ã–π —Ü–≤–µ—Ç (#000000) –ø–æ–∑–≤–æ–ª—è–µ—Ç OLED –ø–∏–∫—Å–µ–ª—è–º –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤—ã–∫–ª—é—á–∞—Ç—å—Å—è, –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —ç–∫–æ–Ω–æ–º—è –∑–∞—Ä—è–¥ –±–∞—Ç–∞—Ä–µ–∏.',
                      style: Theme.of(context).textTheme.bodyLarge,
                    ),
                  ],
                ),
              ),
            ),

            const SizedBox(height: 16),

            // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤
            Row(
              children: [
                Expanded(
                  child: Card(
                    child: Padding(
                      padding: const EdgeInsets.all(16),
                      child: Column(
                        children: [
                          Container(
                            width: 60,
                            height: 60,
                            decoration: const BoxDecoration(
                              color: Color(0xFF121212), // –û–±—ã—á–Ω–∞—è —Ç—ë–º–Ω–∞—è —Ç–µ–º–∞
                              shape: BoxShape.circle,
                            ),
                          ),
                          const SizedBox(height: 8),
                          const Text('–û–±—ã—á–Ω–∞—è'),
                          const Text(
                            '#121212',
                            style: TextStyle(fontSize: 12),
                          ),
                        ],
                      ),
                    ),
                  ),
                ),
                const SizedBox(width: 16),
                Expanded(
                  child: Card(
                    child: Padding(
                      padding: const EdgeInsets.all(16),
                      child: Column(
                        children: [
                          Container(
                            width: 60,
                            height: 60,
                            decoration: const BoxDecoration(
                              color: Color(0xFF000000), // AMOLED
                              shape: BoxShape.circle,
                              border: Border.fromBorderSide(
                                BorderSide(color: Colors.white24),
                              ),
                            ),
                          ),
                          const SizedBox(height: 8),
                          Text(
                            'AMOLED',
                            style: TextStyle(
                              color: Theme.of(context).colorScheme.primary,
                              fontWeight: FontWeight.bold,
                            ),
                          ),
                          const Text(
                            '#000000',
                            style: TextStyle(fontSize: 12),
                          ),
                        ],
                      ),
                    ),
                  ),
                ),
              ],
            ),

            const SizedBox(height: 16),

            // –î–µ–º–æ —Å–æ–æ–±—â–µ–Ω–∏–π
            Card(
              child: Padding(
                padding: const EdgeInsets.all(16),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      '–°–æ–æ–±—â–µ–Ω–∏—è',
                      style: Theme.of(context).textTheme.titleLarge,
                    ),
                    const SizedBox(height: 16),
                    _buildMessageBubble(
                      '–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?',
                      false,
                      '12:30',
                    ),
                    const SizedBox(height: 8),
                    _buildMessageBubble(
                      '–û—Ç–ª–∏—á–Ω–æ! –ü—Ä–æ–±—É—é –Ω–æ–≤—É—é AMOLED —Ç–µ–º—É üîã',
                      true,
                      '12:31',
                    ),
                    const SizedBox(height: 8),
                    _buildMessageBubble(
                      '–ö—Ä—É—Ç–æ! –û–Ω–∞ —ç–∫–æ–Ω–æ–º–∏—Ç –±–∞—Ç–∞—Ä–µ—é?',
                      false,
                      '12:32',
                    ),
                    const SizedBox(height: 8),
                    _buildMessageBubble(
                      '–î–∞, –∑–∞–º–µ—Ç–Ω–æ! –ù–∞ OLED —ç–∫—Ä–∞–Ω–∞—Ö —á–µ—Ä–Ω—ã–µ –ø–∏–∫—Å–µ–ª–∏ –Ω–µ —Å–≤–µ—Ç—è—Ç—Å—è ‚ú®',
                      true,
                      '12:33',
                    ),
                  ],
                ),
              ),
            ),

            const SizedBox(height: 16),

            // –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            Card(
              child: Padding(
                padding: const EdgeInsets.all(16),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      '–≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞',
                      style: Theme.of(context).textTheme.titleLarge,
                    ),
                    const SizedBox(height: 16),
                    
                    // –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏
                    SwitchListTile(
                      title: const Text('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'),
                      subtitle: const Text('–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'),
                      value: true,
                      onChanged: (value) {},
                    ),
                    
                    CheckboxListTile(
                      title: const Text('–ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ'),
                      subtitle: const Text('–°–æ—Ö—Ä–∞–Ω—è—Ç—å —Ñ–∞–π–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏'),
                      value: true,
                      onChanged: (value) {},
                    ),
                    
                    const SizedBox(height: 16),
                    
                    // –°–ª–∞–π–¥–µ—Ä
                    Text(
                      '–Ø—Ä–∫–æ—Å—Ç—å: 60%',
                      style: Theme.of(context).textTheme.titleMedium,
                    ),
                    Slider(
                      value: 0.6,
                      onChanged: (value) {},
                    ),
                    
                    const SizedBox(height: 16),
                    
                    // –ö–Ω–æ–ø–∫–∏
                    Row(
                      children: [
                        Expanded(
                          child: ElevatedButton(
                            onPressed: () {},
                            child: const Text('–ü—Ä–∏–º–µ–Ω–∏—Ç—å'),
                          ),
                        ),
                        const SizedBox(width: 12),
                        Expanded(
                          child: OutlinedButton(
                            onPressed: () {},
                            child: const Text('–û—Ç–º–µ–Ω–∞'),
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
              ),
            ),

            const SizedBox(height: 16),

            // –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
            Card(
              child: Padding(
                padding: const EdgeInsets.all(16),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Row(
                      children: [
                        Icon(
                          Icons.battery_charging_full,
                          color: Colors.green,
                        ),
                        const SizedBox(width: 8),
                        Text(
                          '–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ AMOLED —Ç–µ–º—ã',
                          style: Theme.of(context).textTheme.titleLarge,
                        ),
                      ],
                    ),
                    const SizedBox(height: 16),
                    
                    _buildBenefitItem(
                      Icons.battery_saver,
                      '–≠–∫–æ–Ω–æ–º–∏—è –±–∞—Ç–∞—Ä–µ–∏',
                      '–î–æ 30% –º–µ–Ω—å—à–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –Ω–∞ OLED —ç–∫—Ä–∞–Ω–∞—Ö',
                      Colors.green,
                    ),
                    _buildBenefitItem(
                      Icons.visibility,
                      '–ú–µ–Ω—å—à–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è –≥–ª–∞–∑',
                      '–ö–æ–º—Ñ–æ—Ä—Ç–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ —Ç–µ–º–Ω–æ—Ç–µ',
                      Colors.blue,
                    ),
                    _buildBenefitItem(
                      Icons.contrast,
                      '–í—ã—Å–æ–∫–∏–π –∫–æ–Ω—Ç—Ä–∞—Å—Ç',
                      '–ò–¥–µ–∞–ª—å–Ω–∞—è —á–∏—Ç–∞–µ–º–æ—Å—Ç—å —Ç–µ–∫—Å—Ç–∞',
                      Colors.orange,
                    ),
                    _buildBenefitItem(
                      Icons.style,
                      '–ü—Ä–µ–º–∏—É–º –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥',
                      '–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω',
                      Colors.purple,
                    ),
                  ],
                ),
              ),
            ),
          ],
        ),
        floatingActionButton: FloatingActionButton.extended(
          onPressed: () {
            ScaffoldMessenger.of(context).showSnackBar(
              SnackBar(
                content: Text(_useAmoled 
                    ? 'AMOLED —Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–∞ üîã' 
                    : '–û–±—ã—á–Ω–∞—è —Ç—ë–º–Ω–∞—è —Ç–µ–º–∞'),
              ),
            );
          },
          icon: const Icon(Icons.palette),
          label: const Text('–°–º–µ–Ω–∏—Ç—å —Ç–µ–º—É'),
        ),
      ),
    );
  }

  Widget _buildMessageBubble(String text, bool isOwn, String time) {
    return Row(
      mainAxisAlignment: isOwn ? MainAxisAlignment.end : MainAxisAlignment.start,
      children: [
        if (!isOwn) ...[
          CircleAvatar(
            radius: 16,
            backgroundColor: Theme.of(context).colorScheme.primary,
            child: const Text('A', style: TextStyle(color: Colors.white)),
          ),
          const SizedBox(width: 8),
        ],
        Flexible(
          child: Container(
            padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),
            decoration: BoxDecoration(
              color: isOwn 
                  ? Theme.of(context).colorScheme.primary
                  : Theme.of(context).colorScheme.surfaceVariant,
              borderRadius: BorderRadius.circular(16),
            ),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  text,
                  style: TextStyle(
                    color: isOwn 
                        ? Colors.white 
                        : Theme.of(context).colorScheme.onSurfaceVariant,
                  ),
                ),
                const SizedBox(height: 4),
                Text(
                  time,
                  style: TextStyle(
                    fontSize: 12,
                    color: isOwn 
                        ? Colors.white70 
                        : Theme.of(context).colorScheme.onSurfaceVariant.withOpacity(0.7),
                  ),
                ),
              ],
            ),
          ),
        ),
        if (isOwn) ...[
          const SizedBox(width: 8),
          CircleAvatar(
            radius: 16,
            backgroundColor: Theme.of(context).colorScheme.secondary,
            child: const Text('–Ø', style: TextStyle(color: Colors.white)),
          ),
        ],
      ],
    );
  }

  Widget _buildBenefitItem(
    IconData icon,
    String title,
    String subtitle,
    Color color,
  ) {
    return Padding(
      padding: const EdgeInsets.only(bottom: 12),
      child: Row(
        children: [
          Container(
            padding: const EdgeInsets.all(8),
            decoration: BoxDecoration(
              color: color.withOpacity(0.1),
              borderRadius: BorderRadius.circular(8),
            ),
            child: Icon(icon, color: color, size: 20),
          ),
          const SizedBox(width: 12),
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  title,
                  style: Theme.of(context).textTheme.titleMedium,
                ),
                Text(
                  subtitle,
                  style: Theme.of(context).textTheme.bodyMedium,
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }
}
